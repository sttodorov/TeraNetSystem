@model TeraNetSystem.Web.Areas.Office.Models.TaskViewModel

<div class="content-box box-default margin-top col-lg-8">
    <div class="row">
        @if (ViewBag.Title != "Edit task")
        {
            <h4>@Html.DisplayFor(m => m.Id)</h4>
        }
        <ul class="list-unstyled text-left col-lg-offset-1">
            <li class="row margin-10">
                <span class="col-lg-6 no-padding">@Html.LabelFor(m => m.NetworkerId)</span>

                @if (ViewBag.Title == "Transfer requst to task" || ViewBag.Title == "Edit task")
                {
                    @Html.DropDownListFor(m => m.NetworkerId, Model.Netwrokers, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.NetworkerId, string.Empty, new { @class="text-danger"})
                }
                else
                {
                    @Html.DisplayFor(m => m.Networker.UserName)
                }
            </li>
            <li class="row margin-10">
                <span class="col-lg-6 no-padding">@Html.LabelFor(m => m.TownName)</span>
                    @Html.DisplayFor(m => m.TownName)
            </li>
            <li class="row margin-10">
                <span class="col-lg-6 no-padding">@Html.LabelFor(m => m.Address)</span>
                
                @if (ViewBag.Title == "Edit task" || ViewBag.Title == "Transfer requst to task")
                {
                    @Html.EditorFor(m => m.Address, new { Value = Model.Address })
                    @Html.ValidationMessageFor(m => m.Address, string.Empty, new { @class = "text-danger" })
                    @Html.HiddenFor(m=>m.TownName)
                }
                else
                {
                    <span class="col-lg-5 no-padding">
                        @Html.DisplayFor(m => m.Address)
                    </span>
                }
            </li>
            <li class="row margin-10">
                <span class="col-lg-6 no-padding">@Html.LabelFor(m => m.Description)</span>
                @if (ViewBag.Title == "Transfer requst to task" || ViewBag.Title == "Edit task")
                {
                    @Html.EditorFor(m => m.Description, new { Value = Model.Description != null ? Model.Description : string.Empty })
                    @Html.ValidationMessageFor(m => m.Description, string.Empty, new { @class = "text-danger" })
                }
                else
                {
                    <span class="col-lg-5 no-padding">
                        @Html.DisplayFor(m => m.Description)
                    </span>
                }
            </li>
        </ul>
        <div class="row margin-10">
            @if (ViewBag.Title == "Transfer requst to task" || ViewBag.Title == "Edit task")
            {
                <button class="button button-rounded button-flat-primary" type="submit">
                    <i class=" fa fa-upload no-margin no-padding">
                        @if (ViewBag.Title == "Edit task")
                        {
                            @:Apply
                        }
                        else
                        {
                            @:Send task
                        }
                    </i>
                </button>
                <a class="button button-rounded button-flat-caution" href="@Url.Action("ListTasks", "Task")">
                    Cancel
                </a>
            }
            else
            {

                if (User.IsInRole("Admin"))
                {
                    <span class="col-lg-3 col-lg-offset-3">
                        <a class="button button-rounded button-flat-primary" href="@Url.Action("Edit", "Task", new { id = Model.Id})">
                            <i class="fa fa-refresh">
                                Edit
                            </i>
                        </a>
                    </span>
                    using (Html.BeginForm("Delete", "Task", new { id = Model.Id }, FormMethod.Post, new { @class = "form-horizontal col-lg-3" }))
                    {
                        @Html.AntiForgeryToken()
                        <button class="button button-rounded button-flat-caution" type="submit">
                            <i class=" fa fa-warning">
                                Delete
                            </i>
                        </button>
                    }
                }
                if (User.IsInRole("NetworkMan") || User.IsInRole("Admin"))
                {
                    using (Html.BeginForm("MarkAsDone", "Task", new { id = Model.Id }, FormMethod.Post, new { @class = "form-horizontal margin-top" }))
                    {
                        @Html.AntiForgeryToken()
                        <button class="button button-rounded button-flat-primary" type="submit">
                            <i class=" fa fa-check-circle no-margin no-padding">
                                Mark as DONE
                            </i>
                        </button>
                    }
                }
            }
        </div>
    </div>
</div>
